version: 2.1

########################################################################################################################
#                                                      EXECUTORS                                                       #
########################################################################################################################

executors:
  default:
    working_directory: /home/circleci/metabase/metabase/
    docker:
      - image: circleci/clojure:lein-2.8.1-node-browsers

  postgres-9-6:
    working_directory: /home/circleci/metabase/metabase/
    docker:
      - image: circleci/clojure:lein-2.8.1-node-browsers
      - image: circleci/postgres:9.6-alpine
        environment:
          POSTGRES_USER: circle_test
          POSTGRES_DB: circle_test
    environment:
      MB_DB_TYPE: postgres
      MB_DB_PORT: 5432
      MB_DB_HOST: localhost
      MB_DB_DBNAME: circle_test
      MB_DB_USER: circle_test
      MB_POSTGRESQL_TEST_USER: circle_test

  mysql-5-7:
    working_directory: /home/circleci/metabase/metabase/
    docker:
      - image: circleci/clojure:lein-2.8.1-node-browsers
      - image: circleci/mysql:5.7.23
    environment:
      MB_DB_TYPE: mysql
      MB_DB_HOST: localhost
      MB_DB_PORT: 3306
      MB_DB_DBNAME: circle_test
      MB_DB_USER: root
      MB_MYSQL_TEST_USER: root

########################################################################################################################
#                                                       COMMANDS                                                       #
########################################################################################################################

commands:
  attach-workspace:
    steps:
      - attach_workspace:
          at: /home/circleci/

  restore-be-deps-cache:
    steps:
      - restore_cache:
          keys:
            - be-deps-{{ checksum "project.clj" }}
            - be-deps-

  restore-fe-deps-cache:
    steps:
      - restore_cache:
          keys:
            - fe-deps-{{ checksum "yarn.lock" }}
            - fe-deps-

  fetch-jdbc-driver-jar:
    parameters:
      driver:
        type: string
      source:
        type: string
      dest:
        type: string
    steps:
      - run:
          name: Make plugins dir
          command: mkdir /home/circleci/metabase/metabase/plugins
      - run:
          name: Download << parameters.driver >> JDBC driver JAR
          command: >
            /home/circleci/metabase/metabase/.circleci/skip-driver-tests.sh << parameters.driver >> ||
            wget --output-document=plugins/<< parameters.dest >> ${<< parameters.source >>}
          no_output_timeout: 5m

  wait-for-driver:
    parameters:
      driver:
        type: string
      port:
        type: integer
    steps:
      - run:
          name: Wait for << parameters.driver >> to be ready
          command: >
            /home/circleci/metabase/metabase/.circleci/skip-driver-tests.sh << parameters.driver >> ||
            while ! nc -z localhost << parameters.port >>; do sleep 0.1; done
          no_output_timeout: 5m

  run-lein-command:
    parameters:
      command:
        type: string
      command-name:
        type: string
    steps:
      - attach-workspace
      - restore-be-deps-cache
      - run:
          name: << parameters.command-name >>
          command: lein with-profile +ci << parameters.command >>
          no_output_timeout: 5m

  test-driver:
    parameters:
      driver:
        type: string
      before-steps:
        type: steps
        default: []
      timeout:
        type: string
        default: 5m
    steps:
      - attach-workspace
      - restore-be-deps-cache
      - steps: << parameters.before-steps >>
      - run:
          name: Test << parameters.driver >> driver
          environment:
            DRIVERS: h2,<< parameters.driver >>
          command: >
            /home/circleci/metabase/metabase/.circleci/skip-driver-tests.sh << parameters.driver >> ||
            lein with-profile +ci test
          no_output_timeout: << parameters.timeout >>

  test-migrate-from-h2:
    parameters:
      db-type:
        type: string
    steps:
      - attach-workspace
      - restore-be-deps-cache
      - run:
          name: Test migrating from H2 -> << parameters.db-type >>
          environment:
            MB_DB_TYPE: << parameters.db-type >>
            MB_DB_HOST: localhost
          command: >
            lein run load-from-h2 ./frontend/test/__runner__/test_db_fixture.db
          no_output_timeout: 5m


jobs:

########################################################################################################################
#                                                       CHECKOUT                                                       #
########################################################################################################################

  checkout:
    executor: default
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}
            - source-
      - checkout
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - .git
      # The basic idea here is to generate a file with checksums for all the backend source files, and save it as
      # `./backend-checksums.txt`. Then we'll use the checksum of that files for uberjar caching; thus we can reuse
      # the same uberjar for integration tests across any build where the backend files are the same
      - run:
          name: Generate checksums of all backend source files to use as Uberjar cache key
          command: >
            for file in `find ./src -type f -name '*.clj' | sort`;
              do echo `md5sum $file` >> backend-checksums.txt;
            done;
            echo `md5sum $project.clj` >> backend-checksums.txt
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - metabase/metabase

########################################################################################################################
#                                                       BACKEND                                                        #
########################################################################################################################

  be-deps:
    executor: default
    steps:
      - attach-workspace
      - restore-be-deps-cache
      - run: lein with-profile +include-all-drivers deps
      - save_cache:
          key: be-deps-{{ checksum "project.clj" }}
          paths:
            - /home/circleci/.m2

  be-tests:
    executor: default
    steps:
      - run-lein-command:
          command-name: Run backend unit tests with Java 8
          command: test

  be-tests-java-11:
    executor: default
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.8.1
    steps:
      - run-lein-command:
          command-name: Run backend unit tests with Java 11
          command: test

  be-linter-eastwood:
    executor: default
    steps:
      - run-lein-command:
          command-name: Run eastwood linter
          command: eastwood

  be-linter-docstring-checker:
    executor: default
    steps:
      - run-lein-command:
          command-name: Check docstrings
          command: docstring-checker

  be-linter-namespace-decls:
    executor: default
    steps:
      - run-lein-command:
          command-name: Check namespace declarations
          command: check-namespace-decls

  be-linter-bikeshed:
    executor: default
    steps:
      - run-lein-command:
          command-name: Run bikeshed linter
          command: bikeshed

  be-linter-reflection-warnings:
    executor: default
    steps:
      - attach-workspace
      - restore-be-deps-cache
      - run:
          name: Run reflection warnings checker
          command: ./bin/reflection-linter
          no_output_timeout: 5m

  be-tests-mysql:
    executor: mysql-5-7
    environment:
      MB_ENCRYPTION_SECRET_KEY: Orw0AAyzkO/kPTLJRxiyKoBHXa/d6ZcO+p+gpZO/wSQ=
    steps:
      - test-driver:
          driver: mysql

  be-tests-postgres:
    executor: postgres-9-6
    steps:
      - test-driver:
          driver: postgres

  be-tests-sparksql:
    executor: default
    docker:
      - image: circleci/clojure:lein-2.8.1-node-browsers
      - image: metabase/spark:2.1.1
    steps:
      - test-driver:
          driver: sparksql
          before-steps:
            - wait-for-driver:
                driver: sparksql
                port: 10000

  be-tests-mongo:
    executor: default
    docker:
      - image: circleci/clojure:lein-2.8.1-node-browsers
      - image: circleci/mongo:3.4
    steps:
      - test-driver:
          driver: mongo

  be-tests-vertica:
    executor: default
    docker:
      - image: circleci/clojure:lein-2.8.1-node-browsers
      - image: sumitchawla/vertica
    steps:
      - test-driver:
          driver: vertica
          before-steps:
            - fetch-jdbc-driver-jar:
                driver: vertica
                source: VERTICA_JDBC_JAR
                dest: vertica-jdbc-7.1.2-0.jar


  be-tests-snowflake:
    executor: default
    docker:
      - image: circleci/clojure:lein-2.8.1-node-browsers
    steps:
      - test-driver:
          driver: snowflake
          timeout: 10m

  be-tests-sqlserver:
    executor: default
    steps:
      - test-driver:
          driver: sqlserver

  be-tests-bigquery:
    executor: default
    steps:
      - test-driver:
          driver: bigquery

  be-tests-googleanalytics:
    executor: default
    steps:
      - test-driver:
          driver: googleanalytics

  be-tests-sqlite:
    executor: default
    steps:
      - test-driver:
          driver: sqlite

  be-tests-druid:
    executor: default
    steps:
      - test-driver:
          driver: druid

  be-tests-redshift:
    executor: default
    steps:
      - test-driver:
          driver: redshift
          timeout: 10m

  be-tests-presto:
    executor: default
    docker:
      - image: circleci/clojure:lein-2.8.1-node-browsers
      - image: metabase/presto-mb-ci
        environment:
          JAVA_TOOL_OPTIONS: "-Xmx2g"
    environment:
      MB_PRESTO_TEST_HOST: localhost
      MB_PRESTO_TEST_PORT: 8080
    steps:
      - test-driver:
          driver: presto
          before-steps:
            - wait-for-driver:
                driver: presto
                port: 8080

  be-tests-oracle:
    executor: default
    steps:
      - test-driver:
          driver: oracle
          before-steps:
            - fetch-jdbc-driver-jar:
                driver: oracle
                source: ORACLE_JDBC_JAR
                dest: ojdbc7.jar

  yaml-linter:
    executor: default
    steps:
      - attach-workspace
      - run:
          name: Install yamllint
          command: npm install yaml-lint
          no_output_timeout: 2m
      - run:
          name: Lint YAML files
          command: ./node_modules/.bin/yamllint `find resources -name '*.yaml'`
          no_output_timeout: 2m

  be-tests-migrate-to-postgres:
    executor: postgres-9-6
    steps:
      - test-migrate-from-h2:
          db-type: postgres

  be-tests-migrate-to-mysql:
    executor: mysql-5-7
    steps:
      - test-migrate-from-h2:
          db-type: mysql


########################################################################################################################
#                                                       FRONTEND                                                       #
########################################################################################################################

  fe-deps:
    executor: default
    steps:
      - attach-workspace
      - restore-fe-deps-cache
      - run:
          name: Run yarn if yarn.lock checksum has changed
          command: >
            if [ ! -f yarn.lock.checksum ] || [ "$(md5sum yarn.lock)" != "$(cat yarn.lock.checksum)" ];
              then SAUCE_CONNECT_DOWNLOAD_ON_INSTALL=true yarn;
            fi
          no_output_timeout: 5m
      - run:
          name: Save yarn checksum
          command: md5sum yarn.lock > yarn.lock.checksum
      - save_cache:
          key: fe-deps-{{ checksum "yarn.lock" }}
          paths:
            - /home/circleci/.yarn
            - /home/circleci/.yarn-cache
            - /home/circleci/metabase/metabase/node_modules
            - /home/circleci/yarn.lock.checksum

  fe-linter-eslint:
    executor: default
    steps:
      - attach-workspace
      - restore-fe-deps-cache
      - run:
          name: Run ESLint linter
          command: yarn lint-eslint
          no_output_timeout: 5m

  fe-linter-prettier:
    executor: default
    steps:
      - attach-workspace
      - restore-fe-deps-cache
      - run:
          name: Run Prettier formatting linter
          command: yarn lint-prettier
          no_output_timeout: 5m

  fe-linter-flow:
    executor: default
    steps:
      - attach-workspace
      - restore-fe-deps-cache
      - run:
          name: Run Flow type checker
          command: yarn flow
          no_output_timeout: 5m

  fe-tests-karma:
    executor: default
    steps:
      - attach-workspace
      - restore-fe-deps-cache
      - run:
          name: Run frontend tests (karma)
          command: yarn run test-karma
          no_output_timeout: 5m

  fe-tests-unit:
    executor: default
    steps:
      - attach-workspace
      - restore-fe-deps-cache
      - run:
          name: Run frontend unit tests
          command: yarn run test-unit
          no_output_timeout: 5m

  fe-tests-integration:
    executor: default
    steps:
      - attach-workspace
      - restore-fe-deps-cache
      - run:
          name: Run frontend integration tests
          command: yarn run test-integration
          no_output_timeout: 5m

  build-uberjar:
    executor: default
    steps:
      - attach-workspace
      - restore-be-deps-cache
      - restore_cache:
          keys:
            - uberjar-{{ checksum "./backend-checksums.txt" }}
      - run:
          name: Build uberjar if needed
          command: >
            if [ ! -f './target/uberjar/metabase.jar' ];
              then ./bin/build version uberjar;
            fi
          no_output_timeout: 5m
      - save_cache:
          key: uberjar-{{ checksum "./backend-checksums.txt" }}
          paths:
            - /home/circleci/metabase/metabase/target/uberjar/metabase.jar

  fe-tests-e2e:
    executor: default
    steps:
      - attach-workspace
      - restore-fe-deps-cache
      - restore_cache:
          keys:
            - uberjar-{{ checksum "./backend-checksums.txt" }}
      - run:
          name: Generate version file
          command: ./bin/build version
      - run:
          name: Run frontend e2e tests
          command: yarn run test-e2e-no-build
          no_output_timeout: 5m


########################################################################################################################
#                                                   DEPLOYMENT, ETC.                                                   #
########################################################################################################################

  deploy-master:
    executor: default
    steps:
      - attach-workspace
      - run: ./bin/deploy-webhook $DEPLOY_WEBHOOK


########################################################################################################################
#                                                      WORKFLOWS                                                       #
########################################################################################################################

workflows:
  version: 2
  build:
    jobs:
      - checkout
      - be-deps:
          requires:
            - checkout
      - be-tests:
          requires:
            - be-deps
      - be-tests-java-11:
          requires:
            - be-deps
      - be-linter-eastwood:
          requires:
            - be-deps
      - be-linter-docstring-checker:
          requires:
            - be-deps
      - be-linter-namespace-decls:
          requires:
            - be-deps
      - be-linter-bikeshed:
          requires:
            - be-deps
      - be-linter-reflection-warnings:
          requires:
            - be-deps
      - be-tests-mysql:
          requires:
            - be-tests
      - be-tests-postgres:
          requires:
            - be-tests
      - be-tests-sparksql:
          requires:
            - be-tests
      - be-tests-mongo:
          requires:
            - be-tests
      - be-tests-sqlserver:
          requires:
            - be-tests
      - be-tests-bigquery:
          requires:
            - be-tests
      - be-tests-googleanalytics:
          requires:
            - be-tests
      - be-tests-sqlite:
          requires:
            - be-tests
      - be-tests-presto:
          requires:
            - be-tests
      - be-tests-oracle:
          requires:
            - be-tests
      - be-tests-druid:
          requires:
            - be-tests
      - be-tests-redshift:
          requires:
            - be-tests
      - be-tests-vertica:
          requires:
            - be-tests
      - be-tests-snowflake:
          requires:
            - be-tests
      - be-tests-migrate-to-postgres:
          requires:
            - be-tests
      - be-tests-migrate-to-mysql:
          requires:
            - be-tests
      - yaml-linter:
          requires:
            - checkout
      - fe-deps:
          requires:
            - checkout
      - fe-linter-eslint:
          requires:
            - fe-deps
      - fe-linter-prettier:
          requires:
            - fe-deps
      - fe-linter-flow:
          requires:
            - fe-deps
      - fe-tests-karma:
          requires:
            - fe-deps
      - fe-tests-unit:
          requires:
            - fe-deps
      - fe-tests-integration:
          requires:
            - fe-deps
      - build-uberjar:
          requires:
            - be-deps
      - fe-tests-e2e:
          requires:
            - build-uberjar
            - fe-deps
      - deploy-master:
          requires:
            - be-linter-eastwood
            - be-linter-docstring-checker
            - be-linter-namespace-decls
            - be-linter-bikeshed
            - be-linter-reflection-warnings

            - be-tests
            - be-tests-mysql
            - be-tests-postgres
            - be-tests-sparksql
            - be-tests-mongo
            - be-tests-sqlserver
            - be-tests-bigquery
            - be-tests-googleanalytics
            - be-tests-sqlite
            - be-tests-presto
            - be-tests-oracle
            - be-tests-druid
            - be-tests-redshift
            - be-tests-vertica
            - be-tests-snowflake
            - be-tests-migrate-to-postgres
            - be-tests-migrate-to-mysql

            - yaml-linter

            - fe-linter-eslint
            - fe-linter-prettier
            - fe-linter-flow
            - fe-tests-karma
            - fe-tests-unit
            - fe-tests-integration
            - fe-tests-e2e
          filters:
            branches:
              only: master
